<Page
    x:Class="Scalemate.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Scalemate"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:controls="using:Scalemate.Controls"
    xmlns:converters="using:Scalemate.Converters"
    xmlns:model="using:Scalemate.Models"
    xmlns:views="using:Scalemate.Views"
    xmlns:viewmodels="using:Scalemate.ViewModels"
    xmlns:controlmate="using:Controlmate"
    mc:Ignorable="d" Foreground="{ThemeResource ForegroundColour}" FontSize="13" SizeChanged="Page_SizeChanged" Loaded="Page_Loaded">

    <Page.Resources>

        <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <converters:BooleanToVisibilityConverter IsReversed="True" x:Key="BooleanToVisibilityConverterInverted"/>
        <converters:IntToTextConverter x:Key="IntToTextConverter"/>

        <Storyboard x:Name="AnimateIn">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)" Storyboard.TargetName="buttonDragDrop">
                <EasingDoubleKeyFrame KeyTime="0" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CircleEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CircleEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)" Storyboard.TargetName="buttonDragDrop">
                <EasingDoubleKeyFrame KeyTime="0" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CircleEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CircleEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)" Storyboard.TargetName="buttonAddImagesFromFolder">
                <EasingDoubleKeyFrame KeyTime="0" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CircleEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CircleEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:0.8" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CircleEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)" Storyboard.TargetName="buttonAddImagesFromFolder">
                <EasingDoubleKeyFrame KeyTime="0" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CircleEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CircleEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:0.8" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CircleEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)" Storyboard.TargetName="textblockOR">
                <EasingDoubleKeyFrame KeyTime="0" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CircleEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CircleEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CircleEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)" Storyboard.TargetName="textblockOR">
                <EasingDoubleKeyFrame KeyTime="0" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CircleEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CircleEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CircleEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)" Storyboard.TargetName="rectangleOR1">
                <EasingDoubleKeyFrame KeyTime="0" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CubicEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CubicEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:1" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CubicEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)" Storyboard.TargetName="rectangleOR2">
                <EasingDoubleKeyFrame KeyTime="0" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CubicEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CubicEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:1" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CubicEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="buttonDragDrop">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="textblockOR">
                <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="buttonAddImagesFromFolder">
                <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.8" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Name="FadeInDrop">
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="gridDrop">
                <DiscreteObjectKeyFrame KeyTime="0">
                    <DiscreteObjectKeyFrame.Value>
                        <Visibility>Visible</Visibility>
                    </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="gridDrop">
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimation Duration="0:0:0.2" To="1" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)" Storyboard.TargetName="textblockDropToImport" d:IsOptimized="True">
                <DoubleAnimation.EasingFunction>
                    <CircleEase EasingMode="EaseOut"/>
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
            <DoubleAnimation Duration="0:0:0.2" To="1" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)" Storyboard.TargetName="textblockDropToImport" d:IsOptimized="True">
                <DoubleAnimation.EasingFunction>
                    <CircleEase EasingMode="EaseOut"/>
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
        </Storyboard>
        <Storyboard x:Name="FadeOutDrop">
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="gridDrop">
                <DiscreteObjectKeyFrame KeyTime="0:0:0.2">
                    <DiscreteObjectKeyFrame.Value>
                        <Visibility>Collapsed</Visibility>
                    </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="gridDrop">
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimation Duration="0:0:0.4" To="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)" Storyboard.TargetName="textblockDropToImport" d:IsOptimized="True">
                <DoubleAnimation.EasingFunction>
                    <CircleEase EasingMode="EaseOut"/>
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
            <DoubleAnimation Duration="0:0:0.4" To="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)" Storyboard.TargetName="textblockDropToImport" d:IsOptimized="True">
                <DoubleAnimation.EasingFunction>
                    <CircleEase EasingMode="EaseOut"/>
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
        </Storyboard>
        <Storyboard x:Name="AnimateInSelectBar" SpeedRatio="1.8">
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="gridTitleBarButtons">
                <DiscreteObjectKeyFrame KeyTime="0">
                    <DiscreteObjectKeyFrame.Value>
                        <Visibility>Visible</Visibility>
                    </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
                <DiscreteObjectKeyFrame KeyTime="0:0:1">
                    <DiscreteObjectKeyFrame.Value>
                        <Visibility>Collapsed</Visibility>
                    </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="gridSelected">
                <DiscreteObjectKeyFrame KeyTime="0">
                    <DiscreteObjectKeyFrame.Value>
                        <Visibility>Visible</Visibility>
                    </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" Storyboard.TargetName="gridSelected">
                <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <BackEase EasingMode="EaseOut" Amplitude="0.3"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" Storyboard.TargetName="gridTitleBarButtons">
                <EasingDoubleKeyFrame KeyTime="0:0:1" Value="-60">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <BackEase EasingMode="EaseOut" Amplitude="0.3"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Name="AnimateOutSelectBar" SpeedRatio="1.8">
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="gridTitleBarButtons">
                <DiscreteObjectKeyFrame KeyTime="0">
                    <DiscreteObjectKeyFrame.Value>
                        <Visibility>Visible</Visibility>
                    </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="gridSelected">
                <DiscreteObjectKeyFrame KeyTime="0">
                    <DiscreteObjectKeyFrame.Value>
                        <Visibility>Visible</Visibility>
                    </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
                <DiscreteObjectKeyFrame KeyTime="0:0:1">
                    <DiscreteObjectKeyFrame.Value>
                        <Visibility>Collapsed</Visibility>
                    </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" Storyboard.TargetName="gridSelected">
                <EasingDoubleKeyFrame KeyTime="0:0:1" Value="60">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <BackEase EasingMode="EaseOut" Amplitude="0.3"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" Storyboard.TargetName="gridTitleBarButtons">
                <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <BackEase EasingMode="EaseOut" Amplitude="0.3"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>

    </Page.Resources>

    <Grid x:Name="gridContainer" Background="{ThemeResource BackgroundColour}" AllowDrop="True" Drop="Grid_Drop" DragOver="Grid_DragOver" DragEnter="Grid_DragEnter" DragLeave="Grid_DragLeave" DropCompleted="Grid_DropCompleted">

        <controls:HostBackDrop/>

        <Rectangle Fill="Black" Opacity=".05"/>
        
        <Rectangle Fill="{ThemeResource BackgroundColour}" Opacity=".85"/>

        <StackPanel x:Name="stackpanelImport" MaxWidth="300" VerticalAlignment="Center">

            <Button x:Name="buttonDragDrop"  IsHitTestVisible="False" Content="Drag and drop images" Style="{StaticResource buttonImportStyle}" IsEnabled="False" RenderTransformOrigin="0.5,1">
                <Button.RenderTransform>
                    <CompositeTransform/>
                </Button.RenderTransform>
            </Button>

            <Grid Margin="0,8">

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="15"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="15"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <Rectangle x:Name="rectangleOR1" Fill="{ThemeResource SeparatorColour}" Height="1" VerticalAlignment="Center" RenderTransformOrigin="1,0.5">
                    <Rectangle.RenderTransform>
                        <CompositeTransform/>
                    </Rectangle.RenderTransform>
                </Rectangle>

                <TextBlock x:Name="textblockOR" Grid.Column="2" FontSize="12" TextLineBounds="Tight" FontWeight="SemiBold" RenderTransformOrigin="0.5,0.5">
                    <TextBlock.RenderTransform>
                        <CompositeTransform/>
                    </TextBlock.RenderTransform>OR</TextBlock>

                <Rectangle x:Name="rectangleOR2" Grid.Column="4" Fill="{ThemeResource SeparatorColour}" Height="1" VerticalAlignment="Center" RenderTransformOrigin="0,0.5">
                    <Rectangle.RenderTransform>
                        <CompositeTransform/>
                    </Rectangle.RenderTransform>
                </Rectangle>

            </Grid>

            <Button x:Name="buttonAddImagesFromFolder" Content="Click to import images" Style="{StaticResource buttonImportStyle}" Click="AddImagesFromFolderAsync" RenderTransformOrigin="0.5,0">
                <Button.RenderTransform>
                    <CompositeTransform/>
                </Button.RenderTransform>
            </Button>

        </StackPanel>

        <GridView x:Name="gridviewImages" KeyDown="gridviewImages_KeyDown" ItemsSource="{x:Bind mainPageViewModel.Images.ImageList, Mode=TwoWay}" SelectionChanged="gridviewImages_SelectionChanged" SelectionMode="Multiple" Visibility="Collapsed" Padding="0,60,0,0" ContainerContentChanging="gridviewImages_ContainerContentChanging">

            <GridView.ItemContainerStyle>
                <Style TargetType="GridViewItem">
                    <Setter Property="Padding" Value="0" />
                    <Setter Property="Margin" Value="0" />
                    <Setter Property="BorderThickness" Value="0" />
                    <Setter Property="HorizontalAlignment" Value="Stretch" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="GridViewItem">
                                <ListViewItemPresenter ContentMargin="0" Padding="0"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </GridView.ItemContainerStyle>

            <GridView.ItemsPanel>
                <ItemsPanelTemplate>
                    <ItemsWrapGrid Orientation="Horizontal" SizeChanged="ItemsWrapGrid_SizeChanged" AreStickyGroupHeadersEnabled="False" Margin="0,0,-10,0"/>
                </ItemsPanelTemplate>
            </GridView.ItemsPanel>

            <GridView.ItemTemplate>
                <DataTemplate>
                    <Grid RightTapped="Grid_RightTapped">
                        <controls:ImageItemControl/>
                        <FlyoutBase.AttachedFlyout>
                            <MenuFlyout>
                                <MenuFlyout.Items>
                                    <MenuFlyoutItem x:Name="menuFlyoutShowInFileExplorer" Text="Open Image" Click="menuFlyoutShowInFileExplorer_Click"/>
                                    <MenuFlyoutItem x:Name="menuFlyoutRemoveImage" Text="Remove Image" Click="menuFlyoutRemoveImage_Click"/>
                                </MenuFlyout.Items>
                            </MenuFlyout>
                        </FlyoutBase.AttachedFlyout>
                    </Grid>
                </DataTemplate>
            </GridView.ItemTemplate>

            <GridView.Footer>
                <StackPanel x:Name="stackpanelImageCount" Opacity="0" Orientation="Horizontal" HorizontalAlignment="Center" Padding="30">
                    <TextBlock Text="{x:Bind mainPageViewModel.Images.ImageList.Count, Mode=OneWay, FallbackValue=0}" FontSize="12" FontWeight="SemiBold"/>
                    <TextBlock Text="{x:Bind mainPageViewModel.Images.ImageList.Count, Converter={StaticResource IntToTextConverter}, Mode=OneWay, FallbackValue=Images}" Margin="5,0,0,0" FontSize="12" FontWeight="SemiBold"/>
                </StackPanel>
            </GridView.Footer>

        </GridView>

        <Grid x:Name="gridTitleBar" VerticalAlignment="Top" Height="60" converters:Clip.ToBounds="True">

            <!--Titlebar Background-->

            <Grid x:Name="gridTitleBarBackground" Background="Transparent">
                <Grid x:Name="gridTitleBarBackgroundInner" Opacity="0">
                    <controls:BackDrop BlurAmount="25"/>
                    <Rectangle Fill="{ThemeResource TitleBarBrush}" Opacity=".875"/>
                    <Rectangle Fill="{ThemeResource BackgroundColour}" Height="1" VerticalAlignment="Bottom" Opacity=".175"/>
                </Grid>
            </Grid>

            <!--Logo, Buttons and Separator-->

            <Grid x:Name="gridTitleBarButtons" Visibility="Collapsed" RenderTransformOrigin="0.5,0.5">
                <Grid.RenderTransform>
                    <CompositeTransform/>
                </Grid.RenderTransform>

                <TextBlock x:Name="textblockLogo" FontSize="12" HorizontalAlignment="Center" VerticalAlignment="Center" IsHitTestVisible="False" FontFamily="Assets/Fonts/Raleway-SemiBold.ttf#Raleway" RenderTransformOrigin="0.5,0.5">
                    <TextBlock.RenderTransform>
                        <CompositeTransform/>
                    </TextBlock.RenderTransform>Scalemate</TextBlock>

                <CheckBox x:Name="checkboxOverflow" Click="checkboxOverflow_Click" Style="{StaticResource checkboxAppBar}" RenderTransformOrigin="0.5,0.5">
                    <CheckBox.RenderTransform>
                        <CompositeTransform/>
                    </CheckBox.RenderTransform>

                    <ToolTipService.ToolTip>
                        More
                    </ToolTipService.ToolTip>

                    <Grid>

                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="{Binding IsChecked,ElementName=checkboxOverflow,Converter={StaticResource BooleanToVisibilityConverterInverted}}">

                            <Ellipse
			Height="4"
			Width="4"
			Opacity="1"
			Stroke="{ThemeResource ForegroundColour}" />

                            <Ellipse
			Height="4"
			Width="4"
			Opacity="1"
            Margin="4"
			Stroke="{ThemeResource ForegroundColour}" />

                            <Ellipse
			Height="4"
			Width="4"
			Opacity="1"
			Stroke="{ThemeResource ForegroundColour}" />

                        </StackPanel>

                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="{Binding IsChecked,ElementName=checkboxOverflow,Converter={StaticResource BooleanToVisibilityConverter}}">

                            <Ellipse
			Height="4"
			Width="4"
			Opacity="1"
			Fill="{ThemeResource ForegroundColour}" />

                            <Ellipse
			Height="4"
			Width="4"
			Opacity="1"
            Margin="4"
			Fill="{ThemeResource ForegroundColour}" />

                            <Ellipse
			Height="4"
			Width="4"
			Opacity="1"
			Fill="{ThemeResource ForegroundColour}" />

                        </StackPanel>

                    </Grid>

                </CheckBox>

                <Rectangle x:Name="rectangleTitleBarSeparator" Width="1" HorizontalAlignment="Right" Fill="{ThemeResource ForegroundColour}" Opacity=".1"/>

                <CheckBox x:Name="checkboxDone" HorizontalAlignment="Right" Click="checkboxDone_Click" Style="{StaticResource checkboxAppBar}" RenderTransformOrigin="0.5,0.5">
                    
                    <CheckBox.RenderTransform>
                        <CompositeTransform/>
                    </CheckBox.RenderTransform>
                    
                    <ToolTipService.ToolTip>
                        Export
                    </ToolTipService.ToolTip>
                    
                    <Path
			Height="10"
			Width="14"
			Stretch="Fill"
			Opacity="1"
			Data="M 15,0 C15,0 5.4375,9.546875 5.4375,9.546875 5.4375,9.546875 0.875,5 0.875,5 0.875,5 0,5.875 0,5.875 0,5.875 5.4375,11.328125 5.4375,11.328125 5.4375,11.328125 15.875,0.875 15.875,0.875 15.875,0.875 15,0 15,0 15,0 15,0 15,0 z"
			Fill="{ThemeResource ForegroundColour}" />
                    
                </CheckBox>

            </Grid>

            <Grid x:Name="gridSelected" Visibility="Collapsed" RenderTransformOrigin="0.5,0.5">
                <Grid.RenderTransform>
                    <CompositeTransform TranslateY="60"/>
                </Grid.RenderTransform>

                <TextBlock x:Name="textblockItemsSelected" FontSize="12" HorizontalAlignment="Left" Margin="20,0,0,0" VerticalAlignment="Center" IsHitTestVisible="False" FontFamily="Assets/Fonts/Raleway-SemiBold.ttf#Raleway" RenderTransformOrigin="0.5,0.5">
                    1 Selected
                </TextBlock>

                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                    <Button x:Name="buttonDeselect" Click="buttonDeselectAll_Click" Style="{StaticResource buttonAppBar}" RenderTransformOrigin="0.5,0.5">
                        <Button.RenderTransform>
                            <CompositeTransform/>
                        </Button.RenderTransform>

                        <ToolTipService.ToolTip>
                            Deselect All
                        </ToolTipService.ToolTip>

                        <Path
		Height="16"
		Width="16"
		Stretch="Fill"
		Opacity="1"
		Data="M 10,10 C10,10 15,10 15,10 15,10 15,15 15,15 15,15 10,15 10,15 10,15 10,10 10,10 zM 9,9 C9,9 9,16 9,16 9,16 16,16 16,16 16,16 16,9 16,9 16,9 9,9 9,9 zM 1,10 C1,10 6,10 6,10 6,10 6,15 6,15 6,15 1,15 1,15 1,15 1,10 1,10 zM 0,9 C0,9 0,16 0,16 0,16 7,16 7,16 7,16 7,9 7,9 7,9 0,9 0,9 zM 10,1 C10,1 15,1 15,1 15,1 15,6 15,6 15,6 10,6 10,6 10,6 10,1 10,1 zM 9,0 C9,0 9,7 9,7 9,7 16,7 16,7 16,7 16,0 16,0 16,0 9,0 9,0 zM 1,1 C1,1 6,1 6,1 6,1 6,6 6,6 6,6 1,6 1,6 1,6 1,1 1,1 zM 0,0 C0,0 0,7 0,7 0,7 7,7 7,7 7,7 7,0 7,0 7,0 0,0 0,0 z"
		Fill="{ThemeResource ForegroundColour}" />
                    </Button>
                    <Button x:Name="buttonInverseSelection" Click="buttonInverseSelection_Click" Style="{StaticResource buttonAppBar}" RenderTransformOrigin="0.5,0.5">
                        <Button.RenderTransform>
                            <CompositeTransform/>
                        </Button.RenderTransform>

                        <ToolTipService.ToolTip>
                            Inverse Selection
                        </ToolTipService.ToolTip>

                        <Path
		Height="16"
		Width="16"
		Stretch="Fill"
		Opacity="1"
		Data="M 15,1 C15,1 15,6 15,6 15,6 10,6 10,6 10,6 10,1 10,1 10,1 15,1 15,1 zM 16,0 C16,0 9,0 9,0 9,0 9,7 9,7 9,7 16,7 16,7 16,7 16,0 16,0 zM 6,10 C6,10 6,15 6,15 6,15 1,15 1,15 1,15 1,10 1,10 1,10 6,10 6,10 zM 7,9 C7,9 0,9 0,9 0,9 0,16 0,16 0,16 7,16 7,16 7,16 7,9 7,9 zM 16,9 C16,9 9,9 9,9 9,9 9,16 9,16 9,16 16,16 16,16 16,16 16,9 16,9 zM 7,0 C7,0 0,0 0,0 0,0 0,7 0,7 0,7 7,7 7,7 7,7 7,0 7,0 z"
		Fill="{ThemeResource ForegroundColour}" />
                    </Button>
                    <Button x:Name="buttonSelectAll" Click="buttonSelectAll_Click" Style="{StaticResource buttonAppBar}" RenderTransformOrigin="0.5,0.5">
                        <Button.RenderTransform>
                            <CompositeTransform/>
                        </Button.RenderTransform>

                        <ToolTipService.ToolTip>
                            Select All
                        </ToolTipService.ToolTip>

                        <Path
		Height="16"
		Width="16"
		Stretch="Fill"
		Opacity="1"
		Data="M 9,9 C9,9 9,16 9,16 9,16 16,16 16,16 16,16 16,9 16,9 16,9 9,9 9,9 zM 0,9 C0,9 0,16 0,16 0,16 7,16 7,16 7,16 7,9 7,9 7,9 0,9 0,9 zM 9,0 C9,0 9,7 9,7 9,7 16,7 16,7 16,7 16,0 16,0 16,0 9,0 9,0 zM 0,0 C0,0 0,7 0,7 0,7 7,7 7,7 7,7 7,0 7,0 7,0 0,0 0,0 z"
		Fill="{ThemeResource ForegroundColour}" />
                    </Button>
                    <Button x:Name="buttonRemoveSelected" Click="buttonRemoveSelected_Click" Style="{StaticResource buttonAppBar}" Margin="0,0,25,0" RenderTransformOrigin="0.5,0.5">
                        <Button.RenderTransform>
                            <CompositeTransform/>
                        </Button.RenderTransform>

                        <ToolTipService.ToolTip>
                            Remove Selected
                        </ToolTipService.ToolTip>

                        <Path
		Height="16"
		Width="16"
		Stretch="Fill"
		Opacity="1"
		Data="M 10.90625,1.53125 C10.90625,1.53125 10.46875,1.09375 10.46875,1.09375 10.46875,1.09375 6,5.5625 6,5.5625 6,5.5625 1.53125,1.09375 1.53125,1.09375 1.53125,1.09375 1.09375,1.53125 1.09375,1.53125 1.09375,1.53125 5.5625,6 5.5625,6 5.5625,6 1.09375,10.46875 1.09375,10.46875 1.09375,10.46875 1.53125,10.90625 1.53125,10.90625 1.53125,10.90625 6,6.4375 6,6.4375 6,6.4375 10.46875,10.90625 10.46875,10.90625 10.46875,10.90625 10.90625,10.46875 10.90625,10.46875 10.90625,10.46875 6.4375,6 6.4375,6 6.4375,6 10.90625,1.53125 10.90625,1.53125 10.90625,1.53125 10.90625,1.53125 10.90625,1.53125 z"
		Stroke="{ThemeResource ForegroundColour}"
		StrokeThickness="1" />
                    </Button>
                    <Rectangle Width="1" HorizontalAlignment="Right" Fill="{ThemeResource ForegroundColour}" Opacity=".1"/>
                </StackPanel>

            </Grid>

        </Grid>

        <Image x:Name="imageTitleBarShadow" Height="8" VerticalAlignment="Top" Margin="0,60,0,0" Source="Assets/TitleBarShadow.png" Stretch="Fill" Opacity="0" IsHitTestVisible="False"/>

        <controlmate:DropdownMenu x:Name="dropdownMenu">
            <controlmate:DropdownMenu.Menu>
                <Grid>

                    <StackPanel x:Name="stackpanelOverflow" Width="300">
                        <Button Style="{StaticResource buttonMenu}" Click="AddImagesFromFolderAsync">
                            Import Images
                        </Button>
                        <Rectangle Height="1" Fill="{ThemeResource ForegroundColour}" Opacity=".1"/>
                        <TextBlock Margin="20,15,20,0" FontWeight="SemiBold" FontSize="13">Preview Size</TextBlock>
                        <Slider x:Name="sliderImageSize" IsThumbToolTipEnabled="False" ValueChanged="sliderImageSize_ValueChanged" Minimum="9" Value="12" Maximum="15" Background="{ThemeResource ForegroundColour}" Style="{StaticResource SliderModern}" Margin="20,5"/>
                        <Rectangle Height="1" Fill="{ThemeResource ForegroundColour}" Opacity=".1"/>
                        <Button x:Name="buttonAbout" Click="buttonAbout_Click" Style="{StaticResource buttonMenu}">
                            About Scalemate
                        </Button>
                    </StackPanel>

                    <StackPanel x:Name="stackpanelSave" Width="300">

                        <RadioButton Style="{StaticResource radiobuttonMenu}" IsChecked="{Binding PercentageChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">

                            <StackPanel>

                                <Grid Height="20" Margin="0,0,0,20">
                                    <TextBlock Text="Percentage" VerticalAlignment="Center" TextLineBounds="Tight" Margin="40,0,0,0"/>
                                </Grid>

                                <Grid>

                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="40"/>
                                        <ColumnDefinition Width="50"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>

                                    <TextBox x:Name="textboxPercentage" TextChanged="ValidateTextboxes" PlaceholderText="100" KeyDown="TextBox_KeyDown" Text="{Binding Percentage, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" MaxLength="3" Style="{StaticResource textboxMenu}" Grid.Column="1"/>

                                    <TextBlock TextLineBounds="Tight" VerticalAlignment="Center" Grid.Column="2" Margin="15,0,0,0">percent</TextBlock>

                                </Grid>

                            </StackPanel>

                        </RadioButton>

                        <Rectangle Height="1" Opacity=".1" Fill="{ThemeResource ForegroundColour}"/>

                        <RadioButton Style="{StaticResource radiobuttonMenu}" IsChecked="{Binding SpecificSizeChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">

                            <Grid>

                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <StackPanel>

                                    <Grid Height="20" Margin="0,0,0,20">

                                        <TextBlock Text="Specific Size" VerticalAlignment="Center" TextLineBounds="Tight" Margin="40,0,0,0"/>

                                        <CheckBox IsChecked="{Binding ConstrainProportions, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource CheckBoxMenu}" HorizontalAlignment="Right">
                                            <ToolTipService.ToolTip>
                                                <StackPanel>
                                                    <TextBlock>
                                            Constrain Proportions
                                                    </TextBlock>
                                                    <TextBlock Opacity=".6" Margin="0,10,0,0" TextWrapping="Wrap">
                                            When checked, the image's proportions will be constrained to the width and height set below.
                                                    </TextBlock>
                                                </StackPanel>
                                            </ToolTipService.ToolTip>
                                        </CheckBox>

                                    </Grid>

                                    <Grid>

                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="40"/>
                                            <ColumnDefinition Width="50"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>

                                        <StackPanel Grid.Column="1">

                                            <TextBox x:Name="textboxWidth" TextChanged="ValidateTextboxes" PlaceholderText="1280" KeyDown="TextBox_KeyDown" MaxLength="5" Text="{Binding Width, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource textboxMenu}" VerticalAlignment="Center" Margin="0,0,0,20"/>

                                            <TextBox x:Name="textboxHeight" TextChanged="ValidateTextboxes" PlaceholderText="720" KeyDown="TextBox_KeyDown" MaxLength="5" Text="{Binding Height, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource textboxMenu}" VerticalAlignment="Center"/>

                                        </StackPanel>

                                        <StackPanel Grid.Column="2">

                                            <Grid Height="35" Margin="15,0,0,20">
                                                <TextBlock TextLineBounds="Tight" VerticalAlignment="Center">width</TextBlock>
                                            </Grid>

                                            <Grid Height="35" Margin="15,0,0,0">
                                                <TextBlock TextLineBounds="Tight" VerticalAlignment="Center">height</TextBlock>
                                            </Grid>

                                        </StackPanel>

                                    </Grid>

                                </StackPanel>

                            </Grid>

                        </RadioButton>

                        <Button x:Name="buttonSave" Click="{x:Bind mainPageViewModel.Save}" Style="{StaticResource buttonSave}">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock>Export</TextBlock>
                                <TextBlock Margin="5,0" Text="{x:Bind mainPageViewModel.Images.ImageList.Count, Mode=OneWay, FallbackValue=0}"/>
                                <TextBlock Margin="0,0,1,0" Text="{x:Bind mainPageViewModel.Images.ImageList.Count, Converter={StaticResource IntToTextConverter}, Mode=OneWay, FallbackValue=Images}"/>
                                <TextBlock>...</TextBlock>
                            </StackPanel>
                        </Button>

                    </StackPanel>

                </Grid>
            </controlmate:DropdownMenu.Menu>
        </controlmate:DropdownMenu>

        <controls:PopupControl x:Name="popupControl">
            <controls:PopupControl.PopupContent>
                <views:ViewAbout x:Name="viewAbout"/>
            </controls:PopupControl.PopupContent>
        </controls:PopupControl>
        
        <Grid x:Name="gridDrop" Visibility="Collapsed" Opacity="0">
            <controls:BackDrop/>
            <Rectangle Fill="{ThemeResource BackgroundColour}" Opacity=".8"/>
            <TextBlock x:Name="textblockDropToImport" HorizontalAlignment="Center" FontSize="20" FontWeight="Light" VerticalAlignment="Center" TextLineBounds="Tight" RenderTransformOrigin="0.5,0.5">
                <TextBlock.RenderTransform>
                    <CompositeTransform ScaleX="0" ScaleY="0"/>
                </TextBlock.RenderTransform>
                Drop to import images
            </TextBlock>
        </Grid>

        <Grid x:Name="gridSave" Visibility="Collapsed">

            <controls:BackDrop/>

            <Rectangle Fill="{ThemeResource BackgroundColour}" Opacity=".9"/>

            <StackPanel x:Name="stackpanelExporting" HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="Visible">
                <ProgressRing Foreground="{ThemeResource ForegroundColour}" IsActive="True" Margin="0,0,0,20" Width="30" Height="30"/>
                <StackPanel Orientation="Horizontal">
                    <TextBlock FontSize="16" FontWeight="Light">Saving</TextBlock>
                    <TextBlock FontSize="16" FontWeight="Light" Text="{Binding ProgressValue, Mode=TwoWay, FallbackValue=1}" Margin="5,0"/>
                    <TextBlock FontSize="16" FontWeight="Light">of</TextBlock>
                    <TextBlock FontSize="16" FontWeight="Light" Text="{Binding ProgressMax, Mode=TwoWay, FallbackValue=100}" Margin="5,0"/>
                    <TextBlock FontSize="16" FontWeight="Light">images</TextBlock>
                </StackPanel>
            </StackPanel>

            <StackPanel x:Name="stackpanelExportComplete" HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="Collapsed" Width="300">

                <TextBlock FontSize="30" FontWeight="Bold" HorizontalAlignment="Center">
                    Export Complete!
                </TextBlock>

                <Button x:Name="buttonOpenFolder" Click="{x:Bind mainPageViewModel.OpenFolder}" Content="Open Folder" Style="{StaticResource buttonImportStyle}" Margin="0,20,0,0"/>

                <Grid Margin="0,8">

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="15"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="15"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <Rectangle Fill="{ThemeResource SeparatorColour}" Height="1" VerticalAlignment="Center" RenderTransformOrigin="1,0.5">
                        <Rectangle.RenderTransform>
                            <CompositeTransform/>
                        </Rectangle.RenderTransform>
                    </Rectangle>

                    <TextBlock Grid.Column="2" FontSize="12" TextLineBounds="Tight" FontWeight="SemiBold" RenderTransformOrigin="0.5,0.5">
                        <TextBlock.RenderTransform>
                            <CompositeTransform/>
                        </TextBlock.RenderTransform>OR</TextBlock>

                    <Rectangle Grid.Column="4" Fill="{ThemeResource SeparatorColour}" Height="1" VerticalAlignment="Center" RenderTransformOrigin="0,0.5">
                        <Rectangle.RenderTransform>
                            <CompositeTransform/>
                        </Rectangle.RenderTransform>
                    </Rectangle>

                </Grid>

                <Button x:Name="buttonImportMoreImages" Click="buttonImportMoreImages_Click" Content="Feel free to import more images" Style="{StaticResource buttonImportStyle}"/>

            </StackPanel>

        </Grid>

    </Grid>

</Page>