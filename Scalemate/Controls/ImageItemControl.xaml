<UserControl
    x:Class="Scalemate.Controls.ImageItemControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Scalemate.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:converters="using:Scalemate.Converters"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    d:DesignHeight="100"
    d:DesignWidth="100"
    DataContextChanged="UserControl_DataContextChanged">

    <UserControl.Resources>

        <Style x:Key="CheckBoxStyle1" TargetType="CheckBox">
            <Setter Property="Background" Value="{ThemeResource CheckBoxBackgroundUnchecked}"/>
            <Setter Property="Foreground" Value="{ThemeResource CheckBoxForegroundUnchecked}"/>
            <Setter Property="BorderBrush" Value="{ThemeResource CheckBoxBorderBrushUnchecked}"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
            <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
            <Setter Property="MinWidth" Value="0"/>
            <Setter Property="MinHeight" Value="0"/>
            <Setter Property="UseSystemFocusVisuals" Value="True"/>
            <Setter Property="FocusVisualMargin" Value="-7,-3,-7,-3"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <Grid x:Name="RootGrid" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">

                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CombinedStates">

                                    <VisualState x:Name="UncheckedNormal">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="rectangleDarken" Storyboard.TargetProperty="Opacity" Duration="0:0:0.1" To="0"/>
                                            <DoubleAnimation Storyboard.TargetName="ellipseCheck" Storyboard.TargetProperty="Opacity" Duration="0:0:0.1" To="0"/>
                                            <DoubleAnimation Storyboard.TargetName="ellipseCheck" Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleX)" Duration="0:0:0.1" To=".8"/>
                                            <DoubleAnimation Storyboard.TargetName="ellipseCheck" Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleY)" Duration="0:0:0.1" To=".8"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="UncheckedPointerOver">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="rectangleDarken" Storyboard.TargetProperty="Opacity" Duration="0:0:0.1" To="0.2"/>
                                            <DoubleAnimation Storyboard.TargetName="ellipseCheck" Storyboard.TargetProperty="Opacity" Duration="0:0:0.1" To="0"/>
                                            <DoubleAnimation Storyboard.TargetName="ellipseCheck" Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleX)" Duration="0:0:0.1" To=".8"/>
                                            <DoubleAnimation Storyboard.TargetName="ellipseCheck" Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleY)" Duration="0:0:0.1" To=".8"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="UncheckedPressed">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="rectangleDarken" Storyboard.TargetProperty="Opacity" Duration="0:0:0.1" To="0.4"/>
                                        </Storyboard>
                                    </VisualState>

                                    <VisualState x:Name="CheckedNormal">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="rectangleDarken" Storyboard.TargetProperty="Opacity" Duration="0:0:0.1" To="0.6"/>
                                            <DoubleAnimation Storyboard.TargetName="ellipseCheck" Storyboard.TargetProperty="Opacity" Duration="0:0:0.1" To="1"/>
                                            <DoubleAnimation Storyboard.TargetName="ellipseCheck" Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleX)" Duration="0:0:0.1" To="1"/>
                                            <DoubleAnimation Storyboard.TargetName="ellipseCheck" Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleY)" Duration="0:0:0.1" To="1"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="CheckedPointerOver">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="rectangleDarken" Storyboard.TargetProperty="Opacity" Duration="0:0:0.1" To="0.65"/>
                                            <DoubleAnimation Storyboard.TargetName="ellipseCheck" Storyboard.TargetProperty="Opacity" Duration="0:0:0.1" To="1"/>
                                            <DoubleAnimation Storyboard.TargetName="ellipseCheck" Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleX)" Duration="0:0:0.1" To="1"/>
                                            <DoubleAnimation Storyboard.TargetName="ellipseCheck" Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleY)" Duration="0:0:0.1" To="1"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="CheckedPressed">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="rectangleDarken" Storyboard.TargetProperty="Opacity" Duration="0:0:0.1" To="0.65"/>
                                            <DoubleAnimation Storyboard.TargetName="ellipseCheck" Storyboard.TargetProperty="Opacity" Duration="0:0:0.1" To="1"/>
                                            <DoubleAnimation Storyboard.TargetName="ellipseCheck" Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleX)" Duration="0:0:0.1" To="1"/>
                                            <DoubleAnimation Storyboard.TargetName="ellipseCheck" Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleY)" Duration="0:0:0.1" To="1"/>
                                        </Storyboard>
                                    </VisualState>

                                    <VisualState x:Name="UncheckedDisabled"/>
                                    <VisualState x:Name="CheckedDisabled"/>
                                    <VisualState x:Name="IndeterminateNormal"/>
                                    <VisualState x:Name="IndeterminatePointerOver"/>
                                    <VisualState x:Name="IndeterminatePressed"/>
                                    <VisualState x:Name="IndeterminateDisabled"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>

                            <Rectangle x:Name="rectangleDarken" Fill="{ThemeResource BackgroundColor}" Grid.ColumnSpan="2" Opacity="0"/>

                            <Grid x:Name="ellipseCheck" Width="28" Height="28" Opacity="0" RenderTransformOrigin="0.5,0.5">
                                <Grid.RenderTransform>
                                    <CompositeTransform ScaleX="0" ScaleY="0"/>
                                </Grid.RenderTransform>
                                <Ellipse Fill="{ThemeResource ForegroundColor}"/>
                                <Path
			Height="8"
			Width="10"
			Stretch="Fill"
			Opacity="1"
			Data="M 15,0 C15,0 5.4375,9.546875 5.4375,9.546875 5.4375,9.546875 0.875,5 0.875,5 0.875,5 0,5.875 0,5.875 0,5.875 5.4375,11.328125 5.4375,11.328125 5.4375,11.328125 15.875,0.875 15.875,0.875 15.875,0.875 15,0 15,0 15,0 15,0 15,0 z"
			Fill="{ThemeResource BackgroundColor}" />
                            </Grid>

                            <ContentPresenter x:Name="ContentPresenter" AutomationProperties.AccessibilityView="Raw" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" Content="{TemplateBinding Content}" Grid.Column="1" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" TextWrapping="Wrap" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>

                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ToolTipImage" TargetType="ToolTip">
            <Setter Property="Foreground" Value="{ThemeResource SystemControlForegroundBaseHighBrush}" />
            <Setter Property="Background" Value="{ThemeResource SystemControlBackgroundChromeMediumLowBrush}" />
            <Setter Property="BorderBrush" Value="{ThemeResource SystemControlForegroundChromeHighBrush}" />
            <Setter Property="BorderThickness" Value="{ThemeResource ToolTipBorderThemeThickness}" />
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
            <Setter Property="FontSize" Value="{ThemeResource ToolTipContentThemeFontSize}" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToolTip">
                        <ContentPresenter x:Name="LayoutRoot"
                                          BorderBrush="#19000000" BorderThickness="1" CornerRadius="2"
                         Content="{TemplateBinding Content}"
                         ContentTransitions="{TemplateBinding ContentTransitions}"
                         ContentTemplate="{TemplateBinding ContentTemplate}"
                         Padding="{TemplateBinding Padding}"
                         TextWrapping="Wrap" >
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="OpenStates">
                                    <VisualState x:Name="Closed">
                                        <Storyboard>
                                            <FadeOutThemeAnimation TargetName="LayoutRoot" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Opened">
                                        <Storyboard>
                                            <FadeInThemeAnimation TargetName="LayoutRoot" />
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </ContentPresenter>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Storyboard x:Name="ScaleImageUp">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)" Storyboard.TargetName="imageFull">
                <EasingDoubleKeyFrame KeyTime="0:0:0.7" Value="1.1">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CircleEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)" Storyboard.TargetName="imageFull">
                <EasingDoubleKeyFrame KeyTime="0:0:0.7" Value="1.1">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CircleEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Name="ScaleImageDown">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)" Storyboard.TargetName="imageFull">
                <EasingDoubleKeyFrame KeyTime="0:0:0.7" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CircleEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)" Storyboard.TargetName="imageFull">
                <EasingDoubleKeyFrame KeyTime="0:0:0.7" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CircleEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
    </UserControl.Resources>

    <Grid converters:Clip.ToBounds="True" PointerEntered="Grid_PointerEntered" PointerExited="Grid_PointerExited">

        <Rectangle x:Name="rectangleDarken" Fill="{ThemeResource ForegroundColor}" Opacity="0" Visibility="Collapsed"/>

        <Image x:Name="imageThumbnail" Opacity="0" HorizontalAlignment="Center" VerticalAlignment="Center" Stretch="UniformToFill" Margin="-2"/>

        <Image x:Name="imageFull" Opacity="0" HorizontalAlignment="Center" VerticalAlignment="Center" Stretch="UniformToFill" Margin="-2" RenderTransformOrigin="0.5,0.5">
            <Image.RenderTransform>
                <CompositeTransform/>
            </Image.RenderTransform>
        </Image>
        
        <Grid x:Name="gridHoverCheck" Opacity="0">
            <Rectangle>
                <Rectangle.Fill>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop x:Name="gradientStop1"/>
                        <GradientStop x:Name="gradientStop2" Offset="1"/>
                    </LinearGradientBrush>
                </Rectangle.Fill>
            </Rectangle>

            <Grid HorizontalAlignment="Center" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5">
                <Grid.RenderTransform>
                    <CompositeTransform ScaleX="0.8" ScaleY="0.8"/>
                </Grid.RenderTransform>

                <Ellipse x:Name="ellipseRGB" Fill="{ThemeResource ForegroundColor}" Width="28" Height="28" Opacity=".6"/>
                <Ellipse Fill="{ThemeResource ForegroundColor}" Width="28" Height="28" Opacity=".4"/>
                <Path
			Height="8"
			Width="10"
			Stretch="Fill"
			Opacity=".5"
			Data="M 15,0 C15,0 5.4375,9.546875 5.4375,9.546875 5.4375,9.546875 0.875,5 0.875,5 0.875,5 0,5.875 0,5.875 0,5.875 5.4375,11.328125 5.4375,11.328125 5.4375,11.328125 15.875,0.875 15.875,0.875 15.875,0.875 15,0 15,0 15,0 15,0 15,0 z"
			Fill="{ThemeResource BackgroundColor}" />

            </Grid>

        </Grid>

        <CheckBox IsChecked="{Binding IsSelected, Mode=TwoWay}" Style="{StaticResource CheckBoxStyle1}" IsHitTestVisible="False"/>

        <Rectangle IsHitTestVisible="False" StrokeThickness="1" Stroke="{ThemeResource ForegroundColor}" Opacity=".06"/>

        <ToolTipService.ToolTip>
            <ToolTip RequestedTheme="Dark" Style="{StaticResource ToolTipImage}">
                <Image x:Name="imagePreview"/>
            </ToolTip>
        </ToolTipService.ToolTip>

    </Grid>

</UserControl>
